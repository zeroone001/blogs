/*
    Vue.js中ajax请求代码应该写在组件的methods中还是vuex的actions中？

    1. 如果请求来的数据是不是要被其他组件公用，仅仅在请求的组件内使用，就不需要放入vuex 的state里。
    2. 如果被其他地方复用，这个很大几率上是需要的，
    如果需要，请将请求放入action里，方便复用，并包装成promise返回，
    在调用处用async await处理返回的数据。
    如果不要复用这个请求，那么直接写在vue文件里很方便。
*/
/*
    计算属性如何使用?
        依赖于data中，数据变化，计算属性就会重新执行，视图也会更新
    计算属性的set和get怎么使用？
        平常就是用默认的get来读取一个计算属性，如果需要手动修改计算属性的时候，
        可以用到setter
    watch 如何使用?
        watch 是监听的变量；当变量发生变化的时候，调用对应的方法；

*/
/*
    1, v-if v-show 区别？
        v-if是条件渲染，按照条件判断是否渲染，v-show是display的block或者none；
    2, Vue的核心？
        数据驱动，组件系统
    3, v-on 可以绑定多个方法吗？
        可以的；
    4, key的作用：
        更高效的渲染虚拟DOM 
    $route和$router的区别?
        $route 是路由信息对象，包含，path, name, query, hash, matched;
        
        $router是路由实例， 包含了路由的跳转方法和钩子函数；
        常用： this.$router.push() 用来跳转；this.$router.go(-1);
    5, Vue 常用的修饰符
        .prevent 提交事件不再重载页面；.stop 阻止单击事件冒泡；
        .self 
        .capture 
    6, 什么是vue的计算属性?
            好处：①使得数据处理结构清晰；
            ②依赖于数据，数据更新，处理结果自动更新；
            ③计算属性内部this指向vm实例；
            ④在template调用时，直接写计算属性名即可；
            ⑤常用的是getter方法，获取数据，也可以使用set方法改变数据；
            ⑥相较于methods，不管依赖的数据变不变，methods都会重新计算，
            但是依赖数据不变的时候computed从缓存中获取，不会重新计算。

    7, vue等单页面应用及其优缺点?
            优点：Vue 的目标是通过尽可能简单的 API 实现响应的数据绑定和组合的视图组件，核心是一个响应的数据绑定系统。
            MVVM、数据驱动、组件化、轻量、简洁、高效、快速、模块友好。
            缺点：不支持低版本的浏览器，最低只支持到IE9；
            不利于SEO的优化（如果要支持SEO，建议通过服务端来进行渲染组件）；
            第一次加载首页耗时相对长一些；
            不可以使用浏览器的导航按钮需要自行实现前进、后退。
    8, 对keep-alive的了解？
        是Vue 内置的一个组件，可以使被包含的组件保留状态，或者避免重新渲染；
        但有时候，我们有一些需求，比如跳转到详情页面时，
        需要保持列表页的滚动条的深度，等返回的时候依然在这个位置，
        这样可以提高用户体验。在Vue中，对于这种“页面缓存”的需求，
        我们可以使用keep-alive组件来解决这个需求。
*/